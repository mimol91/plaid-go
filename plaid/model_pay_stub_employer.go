/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * API version: 2020-09-14_1.94.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package plaid

import (
	"encoding/json"
)

// PayStubEmployer Information about the employer on the pay stub.
type PayStubEmployer struct {
	Address PayStubAddress `json:"address"`
	// The name of the employer on the pay stub.
	Name NullableString `json:"name"`
	AdditionalProperties map[string]interface{}
}

type _PayStubEmployer PayStubEmployer

// NewPayStubEmployer instantiates a new PayStubEmployer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayStubEmployer(address PayStubAddress, name NullableString) *PayStubEmployer {
	this := PayStubEmployer{}
	this.Address = address
	this.Name = name
	return &this
}

// NewPayStubEmployerWithDefaults instantiates a new PayStubEmployer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayStubEmployerWithDefaults() *PayStubEmployer {
	this := PayStubEmployer{}
	return &this
}

// GetAddress returns the Address field value
func (o *PayStubEmployer) GetAddress() PayStubAddress {
	if o == nil {
		var ret PayStubAddress
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *PayStubEmployer) GetAddressOk() (*PayStubAddress, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *PayStubEmployer) SetAddress(v PayStubAddress) {
	o.Address = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PayStubEmployer) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PayStubEmployer) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *PayStubEmployer) SetName(v string) {
	o.Name.Set(&v)
}

func (o PayStubEmployer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["name"] = o.Name.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *PayStubEmployer) UnmarshalJSON(bytes []byte) (err error) {
	varPayStubEmployer := _PayStubEmployer{}

	if err = json.Unmarshal(bytes, &varPayStubEmployer); err == nil {
		*o = PayStubEmployer(varPayStubEmployer)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePayStubEmployer struct {
	value *PayStubEmployer
	isSet bool
}

func (v NullablePayStubEmployer) Get() *PayStubEmployer {
	return v.value
}

func (v *NullablePayStubEmployer) Set(val *PayStubEmployer) {
	v.value = val
	v.isSet = true
}

func (v NullablePayStubEmployer) IsSet() bool {
	return v.isSet
}

func (v *NullablePayStubEmployer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayStubEmployer(val *PayStubEmployer) *NullablePayStubEmployer {
	return &NullablePayStubEmployer{value: val, isSet: true}
}

func (v NullablePayStubEmployer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayStubEmployer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


